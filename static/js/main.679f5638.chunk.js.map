{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactListItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactLIstItem.js","components/ContactList/ContactList.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","onAddContact","checkingContactName","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","reset","contact__form","onSubmit","preventDefault","alert","newContact","id","uuidv4","contact__label","contact__input","placeholder","type","onChange","required","contact__btn","Filter","filter__label","filter__input","ContactListItem","deleteContact","contact__item","contact__info","contact__infoName","contact__infoNumber","btn__delete","onClick","ContactList","contacts","onDeleteContact","length","contact__list","map","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","App","setContacts","filter","setFilter","filterContacts","normalizedFilter","toLowerCase","includes","getFilterContacts","contact","prevContacts","verificationName","normalizedName","find","target","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.679f5638.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__form\":\"ContactForm_contact__form__1kips\",\"contact__label\":\"ContactForm_contact__label__2zEnu\",\"contact__input\":\"ContactForm_contact__input__3hJpi\",\"contact__btn\":\"ContactForm_contact__btn__3Hnv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactListItem_contact__item__3-M0N\",\"contact__info\":\"ContactListItem_contact__info__9k86f\",\"contact__infoNumber\":\"ContactListItem_contact__infoNumber__2PGuL\",\"btn__delete\":\"ContactListItem_btn__delete__1tkYH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"Filter_filter__label__1-GeG\",\"filter__input\":\"Filter_filter__input__2Z-gs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3PT9j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"ContactList_contact__list__1LGl6\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ContactForm({ onAddContact, checkingContactName }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const duplicateName = checkingContactName(name);\n\n    if (duplicateName) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const newContact = { id: uuidv4(), name, number };\n      onAddContact(newContact);\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.contact__form} onSubmit={handleSubmit}>\n      <label className={s.contact__label}>\n        Name\n        <input\n          className={s.contact__input}\n          placeholder=\"Enter name...\"\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <label className={s.contact__label}>\n        Number\n        <input\n          className={s.contact__input}\n          placeholder=\"Enter number...\"\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <button className={s.contact__btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.filter__label}>\n      Find contact by name\n      <input\n        placeholder=\"Enter name...\"\n        className={s.filter__input}\n        type=\"text\"\n        value={value}\n        name=\"filter\"\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, deleteContact }) => {\n  return (\n    <li className={s.contact__item} key={id}>\n      <p className={s.contact__info}>\n        <span className={s.contact__infoName}>{name}:</span>\n        <span className={s.contact__infoNumber}> {number}</span>\n      </p>\n\n      <button\n        className={s.btn__delete}\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nimport ContactListItem from './ContactLIstItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={s.contact__list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          deleteContact={() => onDeleteContact(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default useLocalStorage;\n","import { useState } from 'react';\nimport './App.css';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContact = contact => {\n    setContacts(prevContacts => [...prevContacts, contact]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = ({ target }) => {\n    const { value } = target;\n    setFilter(value);\n  };\n\n  const getFilterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const checkingContactName = verificationName => {\n    const normalizedName = verificationName.toLowerCase();\n    return contacts.find(({ name }) => name.toLowerCase() === normalizedName);\n  };\n\n  const filterContacts = getFilterContacts();\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <h1 className=\"main__title\">Phonebook</h1>\n        <ContactForm\n          onAddContact={addContact}\n          checkingContactName={checkingContactName}\n        />\n\n        <h2 className=\"section__title\">Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          contacts={filterContacts}\n          onDeleteContact={deleteContact}\n        />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}